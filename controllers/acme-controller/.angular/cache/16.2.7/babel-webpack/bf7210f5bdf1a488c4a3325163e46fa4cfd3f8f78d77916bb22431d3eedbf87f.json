{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { NewConnectionComponent } from './components/connections/new-connection/new-connection.component';\nimport { ConnectionsComponent } from './components/connections/connections.component';\nimport { AcceptConnectionComponent } from './components/connections/accept-connection/accept-connection.component';\nimport { CredentialsComponent } from './components/credentials/credentials.component';\nimport { RequestProofComponent } from './components/proof/request-proof/request-proof.component';\nimport { ViewProofsComponent } from './components/proof/view-proofs/view-proofs.component';\nimport { IssueCredentialsComponent } from './components/credentials/issue-credentials/issue-credentials.component';\nimport { ReviewIssuedCredentialsComponent } from './components/credentials/reveiw-issued-credentials/reveiw-issued-credentials.component';\nimport { ProofComponent } from './components/proof/proof.component';\nimport { ConnectionListComponent } from './components/connections/connection-list/connection-list.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const routeConfig = [{\n  path: 'connections',\n  component: ConnectionsComponent,\n  children: [{\n    path: '',\n    redirectTo: 'new-connection',\n    pathMatch: 'full'\n  }, {\n    path: 'new-connection',\n    component: NewConnectionComponent\n  }, {\n    path: 'receive-connection',\n    component: AcceptConnectionComponent\n  }, {\n    path: 'my-connections',\n    component: ConnectionListComponent\n  }]\n}, {\n  path: 'credentials',\n  component: CredentialsComponent,\n  children: [{\n    path: '',\n    redirectTo: 'issue-credentials',\n    pathMatch: 'full'\n  }, {\n    path: 'issue-credentials',\n    component: IssueCredentialsComponent\n  }, {\n    path: 'view-credentials',\n    component: ReviewIssuedCredentialsComponent\n  }]\n}, {\n  path: 'proof-requests',\n  component: ProofComponent,\n  children: [{\n    path: '',\n    redirectTo: 'request-proof',\n    pathMatch: 'full'\n  }, {\n    path: 'request-proof',\n    component: RequestProofComponent\n  }, {\n    path: 'view-proof-requests',\n    component: ViewProofsComponent\n  }]\n}];\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routeConfig), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","NewConnectionComponent","ConnectionsComponent","AcceptConnectionComponent","CredentialsComponent","RequestProofComponent","ViewProofsComponent","IssueCredentialsComponent","ReviewIssuedCredentialsComponent","ProofComponent","ConnectionListComponent","routeConfig","path","component","children","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["/home/andy/University/masters-thesis/ddos-data-mesh-network/controllers/acme-controller/src/app/app-routing.module.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewConnectionComponent } from './components/connections/new-connection/new-connection.component';\nimport { ConnectionsComponent } from './components/connections/connections.component';\nimport { AcceptConnectionComponent } from './components/connections/accept-connection/accept-connection.component';\nimport { CredentialsComponent } from './components/credentials/credentials.component';\nimport { RequestProofComponent } from './components/proof/request-proof/request-proof.component';\nimport { ViewProofsComponent } from './components/proof/view-proofs/view-proofs.component';\nimport { IssueCredentialsComponent } from './components/credentials/issue-credentials/issue-credentials.component';\nimport { ReviewIssuedCredentialsComponent } from './components/credentials/reveiw-issued-credentials/reveiw-issued-credentials.component';\nimport { ProofComponent } from './components/proof/proof.component';\nimport { ConnectionListComponent } from './components/connections/connection-list/connection-list.component';\nexport const routeConfig: Routes = [\n  {\n    path: 'connections',\n    component: ConnectionsComponent,\n    children: [\n      { path: '', redirectTo: 'new-connection', pathMatch: 'full' },\n      { path: 'new-connection', component: NewConnectionComponent},\n      { path: 'receive-connection', component: AcceptConnectionComponent},\n      { path: 'my-connections', component: ConnectionListComponent},\n    ],\n  },\n  {\n    path: 'credentials',\n    component: CredentialsComponent,\n    children: [\n      { path: '', redirectTo: 'issue-credentials', pathMatch: 'full' },\n      { path: 'issue-credentials', component: IssueCredentialsComponent},\n      { path: 'view-credentials', component: ReviewIssuedCredentialsComponent},\n    ],\n  },\n  {\n    path: 'proof-requests',\n    component: ProofComponent,\n    children: [\n      { path: '', redirectTo: 'request-proof', pathMatch: 'full' },\n      { path: 'request-proof', component: RequestProofComponent},\n      { path: 'view-proof-requests', component: ViewProofsComponent},\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routeConfig)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,sBAAsB,QAAQ,kEAAkE;AACzG,SAASC,oBAAoB,QAAQ,gDAAgD;AACrF,SAASC,yBAAyB,QAAQ,wEAAwE;AAClH,SAASC,oBAAoB,QAAQ,gDAAgD;AACrF,SAASC,qBAAqB,QAAQ,0DAA0D;AAChG,SAASC,mBAAmB,QAAQ,sDAAsD;AAC1F,SAASC,yBAAyB,QAAQ,wEAAwE;AAClH,SAASC,gCAAgC,QAAQ,wFAAwF;AACzI,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,uBAAuB,QAAQ,oEAAoE;;;AAC5G,OAAO,MAAMC,WAAW,GAAW,CACjC;EACEC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEX,oBAAoB;EAC/BY,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,EAAE;IAAEG,UAAU,EAAE,gBAAgB;IAAEC,SAAS,EAAE;EAAM,CAAE,EAC7D;IAAEJ,IAAI,EAAE,gBAAgB;IAAEC,SAAS,EAAEZ;EAAsB,CAAC,EAC5D;IAAEW,IAAI,EAAE,oBAAoB;IAAEC,SAAS,EAAEV;EAAyB,CAAC,EACnE;IAAES,IAAI,EAAE,gBAAgB;IAAEC,SAAS,EAAEH;EAAuB,CAAC;CAEhE,EACD;EACEE,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAET,oBAAoB;EAC/BU,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,EAAE;IAAEG,UAAU,EAAE,mBAAmB;IAAEC,SAAS,EAAE;EAAM,CAAE,EAChE;IAAEJ,IAAI,EAAE,mBAAmB;IAAEC,SAAS,EAAEN;EAAyB,CAAC,EAClE;IAAEK,IAAI,EAAE,kBAAkB;IAAEC,SAAS,EAAEL;EAAgC,CAAC;CAE3E,EACD;EACEI,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEJ,cAAc;EACzBK,QAAQ,EAAE,CACR;IAAEF,IAAI,EAAE,EAAE;IAAEG,UAAU,EAAE,eAAe;IAAEC,SAAS,EAAE;EAAM,CAAE,EAC5D;IAAEJ,IAAI,EAAE,eAAe;IAAEC,SAAS,EAAER;EAAqB,CAAC,EAC1D;IAAEO,IAAI,EAAE,qBAAqB;IAAEC,SAAS,EAAEP;EAAmB,CAAC;CAEjE,CACF;AAMD,OAAM,MAAOW,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;cAHjBpB,YAAY,CAACqB,OAAO,CAACV,WAAW,CAAC,EACjCX,YAAY;EAAA;;;2EAEXiB,gBAAgB;IAAAK,OAAA,GAAAC,EAAA,CAAAvB,YAAA;IAAAwB,OAAA,GAFjBxB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}