{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/agent.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AcceptConnectionComponent_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Unable to process that URL: \", ctx_r0.error, \"\");\n  }\n}\nexport class AcceptConnectionComponent {\n  constructor(agentService, router) {\n    this.agentService = agentService;\n    this.router = router;\n  }\n  onSubmit() {\n    try {\n      const invitation = JSON.stringify(JSON.parse(atob(this.invitationUrl)), null, 4);\n      this.agentService.receiveInvitation(invitation).pipe(map(() => this.router.navigateByUrl('/connections')));\n    } catch (e) {\n      if (e instanceof SyntaxError) this.error = \"URL is malformed\";else this.error = e.message;\n    }\n  }\n  static #_ = this.ɵfac = function AcceptConnectionComponent_Factory(t) {\n    return new (t || AcceptConnectionComponent)(i0.ɵɵdirectiveInject(i1.AgentService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AcceptConnectionComponent,\n    selectors: [[\"app-accept-connection\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"container\"], [\"novalidate\", \"\", \"autocomplete\", \"off\"], [1, \"form-group\"], [\"for\", \"invitationUrl\"], [\"name\", \"invitationUrl\", \"type\", \"text\", \"id\", \"invitationUrl\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\", \"btn-block\", 3, \"click\"]],\n    template: function AcceptConnectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Alternatively paste an invitation URL:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AcceptConnectionComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.invitationUrl = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, AcceptConnectionComponent_small_6_Template, 2, 1, \"small\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function AcceptConnectionComponent_Template_button_click_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(8, \" Accept Invitation \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.invitationUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","AcceptConnectionComponent","constructor","agentService","router","onSubmit","invitation","JSON","stringify","parse","atob","invitationUrl","receiveInvitation","pipe","navigateByUrl","e","SyntaxError","message","_","ɵɵdirectiveInject","i1","AgentService","i2","Router","_2","selectors","decls","vars","consts","template","AcceptConnectionComponent_Template","rf","ctx","ɵɵlistener","AcceptConnectionComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtemplate","AcceptConnectionComponent_small_6_Template","AcceptConnectionComponent_Template_button_click_7_listener","ɵɵproperty"],"sources":["/home/andy/University/masters-thesis/ddos-data-mesh-network/controllers/acme-controller/src/app/components/connections/accept-connection/accept-connection.component.ts","/home/andy/University/masters-thesis/ddos-data-mesh-network/controllers/acme-controller/src/app/components/connections/accept-connection/accept-connection.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  map,\n} from 'rxjs';\nimport { AgentService } from 'src/app/services/agent.service';\n\n@Component({\n  selector: 'app-accept-connection',\n  templateUrl: './accept-connection.component.html',\n  styleUrls: ['./accept-connection.component.scss'],\n})\nexport class AcceptConnectionComponent {\n\n  invitationUrl: string;\n  error: string;\n\n  constructor(private agentService: AgentService, private router: Router){}\n\n  onSubmit() {\n\n    try{\n      const invitation = JSON.stringify(JSON.parse(atob(this.invitationUrl)), null, 4);\n    \n      this.agentService.receiveInvitation(invitation)\n      .pipe(\n          map(() => this.router.navigateByUrl('/connections'))\n        )\n    } catch(e: any) {\n      if(e instanceof SyntaxError) this.error = \"URL is malformed\"\n      else this.error = e.message\n    }\n  }\n}\n","<div class=\"container\">\n    <form novalidate autocomplete=\"off\">\n        <div class=\"form-group\">\n            <label for=\"invitationUrl\">Alternatively paste an invitation URL:</label>\n            <input name=\"invitationUrl\" type=\"text\" class=\"form-control\" id=\"invitationUrl\" [(ngModel)]=\"invitationUrl\">\n            <small *ngIf=\"error\">Unable to process that URL:\n                {{ error }}</small>\n        </div>\n        <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"onSubmit()\">\n            Accept Invitation\n        </button>\n    </form>\n</div>"],"mappings":"AAEA,SACEA,GAAG,QACE,MAAM;;;;;;;;ICCDC,EAAA,CAAAC,cAAA,YAAqB;IAAAD,EAAA,CAAAE,MAAA,GACN;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;IADFH,EAAA,CAAAI,SAAA,GACN;IADMJ,EAAA,CAAAK,kBAAA,iCAAAC,MAAA,CAAAC,KAAA,KACN;;;ADM3B,OAAM,MAAOC,yBAAyB;EAKpCC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAU;EAExEC,QAAQA,CAAA;IAEN,IAAG;MACD,MAAMC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;MAEhF,IAAI,CAACR,YAAY,CAACS,iBAAiB,CAACN,UAAU,CAAC,CAC9CO,IAAI,CACDrB,GAAG,CAAC,MAAM,IAAI,CAACY,MAAM,CAACU,aAAa,CAAC,cAAc,CAAC,CAAC,CACrD;KACJ,CAAC,OAAMC,CAAM,EAAE;MACd,IAAGA,CAAC,YAAYC,WAAW,EAAE,IAAI,CAAChB,KAAK,GAAG,kBAAkB,MACvD,IAAI,CAACA,KAAK,GAAGe,CAAC,CAACE,OAAO;;EAE/B;EAAC,QAAAC,CAAA,G;qBApBUjB,yBAAyB,EAAAR,EAAA,CAAA0B,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAA5B,EAAA,CAAA0B,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAzBvB,yBAAyB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZtCtC,EAAA,CAAAC,cAAA,aAAuB;QAGgBD,EAAA,CAAAE,MAAA,6CAAsC;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzEH,EAAA,CAAAC,cAAA,eAA4G;QAA5BD,EAAA,CAAAwC,UAAA,2BAAAC,kEAAAC,MAAA;UAAA,OAAAH,GAAA,CAAArB,aAAA,GAAAwB,MAAA;QAAA,EAA2B;QAA3G1C,EAAA,CAAAG,YAAA,EAA4G;QAC5GH,EAAA,CAAA2C,UAAA,IAAAC,0CAAA,mBACuB;QAC3B5C,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,gBAAoF;QAArBD,EAAA,CAAAwC,UAAA,mBAAAK,2DAAA;UAAA,OAASN,GAAA,CAAA3B,QAAA,EAAU;QAAA,EAAC;QAC/EZ,EAAA,CAAAE,MAAA,0BACJ;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAN2EH,EAAA,CAAAI,SAAA,GAA2B;QAA3BJ,EAAA,CAAA8C,UAAA,YAAAP,GAAA,CAAArB,aAAA,CAA2B;QACnGlB,EAAA,CAAAI,SAAA,GAAW;QAAXJ,EAAA,CAAA8C,UAAA,SAAAP,GAAA,CAAAhC,KAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}