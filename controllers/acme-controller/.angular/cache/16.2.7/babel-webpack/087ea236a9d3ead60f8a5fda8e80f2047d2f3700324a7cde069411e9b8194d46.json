{"ast":null,"code":"import { map } from 'rxjs';\nimport { ConnectionStatus } from 'src/app/enums/connection-status';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/agent.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../credential-form/credential-form.component\";\nexport class IssueCredentialsComponent {\n  constructor(agentService) {\n    this.agentService = agentService;\n  }\n  ngOnInit() {\n    this.testAttributes = [{\n      name: \"test\",\n      value: \"value1\",\n      mimeType: \"\"\n    }, {\n      name: \"test1\",\n      value: \"value1\",\n      mimeType: \"\"\n    }, {\n      name: \"test2\",\n      value: \"value1\",\n      mimeType: \"\"\n    }, {\n      name: \"test3\",\n      value: \"value1\",\n      mimeType: \"\"\n    }];\n    this.agentService.getConnections().pipe(map(connections => this.connections = connections.filter(connection => connection.state === ConnectionStatus.ACTIVE))).subscribe();\n  }\n  static #_ = this.ɵfac = function IssueCredentialsComponent_Factory(t) {\n    return new (t || IssueCredentialsComponent)(i0.ɵɵdirectiveInject(i1.AgentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IssueCredentialsComponent,\n    selectors: [[\"app-issue-credentials\"]],\n    decls: 36,\n    vars: 1,\n    consts: [[1, \"container\", \"d-grid\", \"gap-4\"], [1, \"row\", \"pt-4\"], [\"for\", \"connectionSelect\"], [\"id\", \"connectionSelect\", \"name\", \"connection\", 1, \"form-control\"], [\"value\", \"connection1\"], [\"value\", \"connection2\"], [\"value\", \"connection3\"], [\"for\", \"schemaSelect\"], [\"id\", \"schemaSelect\", \"name\", \"schema\", 1, \"form-control\"], [\"value\", \"schema1\"], [\"value\", \"schema2\"], [\"value\", \"schema3\"], [\"for\", \"definitionSelect\"], [\"id\", \"definitionSelect\", \"name\", \"definition\", 1, \"form-control\"], [\"value\", \"definition1\"], [\"value\", \"definition2\"], [\"value\", \"definition3\"], [3, \"attributes\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-4\"]],\n    template: function IssueCredentialsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\")(2, \"div\", 1)(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Select Connection:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 3)(6, \"option\", 4);\n        i0.ɵɵtext(7, \"Connection 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"option\", 5);\n        i0.ɵɵtext(9, \"Connection 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 6);\n        i0.ɵɵtext(11, \"Connection 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Select Credential Schema:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"select\", 8)(16, \"option\", 9);\n        i0.ɵɵtext(17, \"Schema 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 10);\n        i0.ɵɵtext(19, \"Schema 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 11);\n        i0.ɵɵtext(21, \"Schema 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 1)(23, \"label\", 12);\n        i0.ɵɵtext(24, \"Select Credential Definition:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"select\", 13)(26, \"option\", 14);\n        i0.ɵɵtext(27, \"Definition 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 15);\n        i0.ɵɵtext(29, \"Definition 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"option\", 16);\n        i0.ɵɵtext(31, \"Definition 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 1);\n        i0.ɵɵelement(33, \"app-credential-form\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 18);\n        i0.ɵɵtext(35, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(33);\n        i0.ɵɵproperty(\"attributes\", ctx.testAttributes);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.NgControlStatusGroup, i2.NgForm, i3.CredentialFormComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["map","ConnectionStatus","IssueCredentialsComponent","constructor","agentService","ngOnInit","testAttributes","name","value","mimeType","getConnections","pipe","connections","filter","connection","state","ACTIVE","subscribe","_","i0","ɵɵdirectiveInject","i1","AgentService","_2","selectors","decls","vars","consts","template","IssueCredentialsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/andy/University/masters-thesis/ddos-data-mesh-network/controllers/acme-controller/src/app/components/credentials/issue-credentials/issue-credentials.component.ts","/home/andy/University/masters-thesis/ddos-data-mesh-network/controllers/acme-controller/src/app/components/credentials/issue-credentials/issue-credentials.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { map } from 'rxjs';\nimport { ConnectionStatus } from 'src/app/enums/connection-status';\nimport { Connection } from 'src/app/models/connection';\nimport { Attribute } from 'src/app/models/credential';\nimport { AgentService } from 'src/app/services/agent.service';\n\n@Component({\n  selector: 'app-issue-credentials',\n  templateUrl: './issue-credentials.component.html',\n  styleUrls: ['./issue-credentials.component.scss']\n})\nexport class IssueCredentialsComponent {\n  testAttributes: Attribute[]\n  connections: Connection[]\n\n  constructor(private agentService: AgentService){}\n\n  ngOnInit() {\n    this.testAttributes = [\n      {name: \"test\", value: \"value1\", mimeType: \"\"},\n      {name: \"test1\", value: \"value1\", mimeType: \"\"},\n      {name: \"test2\", value: \"value1\", mimeType: \"\"},\n      {name: \"test3\", value: \"value1\", mimeType: \"\"}\n    ]\n    this.agentService.getConnections().pipe(\n      map((connections: Connection[]) => this.connections = connections.filter((connection: Connection) => connection.state === ConnectionStatus.ACTIVE))\n      ).subscribe();\n  }\n\n}\n","<div class=\"container d-grid gap-4\">\n    <form>\n        <div class=\"row pt-4\">\n            <label for=\"connectionSelect\">Select Connection:</label>\n            <select id=\"connectionSelect\" name=\"connection\" class=\"form-control\">\n                <option value=\"connection1\">Connection 1</option>\n                <option value=\"connection2\">Connection 2</option>\n                <option value=\"connection3\">Connection 3</option>\n            </select>\n        </div>\n        <div class=\"row pt-4\">\n\n            <label for=\"schemaSelect\">Select Credential Schema:</label>\n            <select id=\"schemaSelect\" name=\"schema\" class=\"form-control\">\n                <option value=\"schema1\">Schema 1</option>\n                <option value=\"schema2\">Schema 2</option>\n                <option value=\"schema3\">Schema 3</option>\n            </select>\n        </div>\n        <div class=\"row pt-4\">\n\n            <label for=\"definitionSelect\">Select Credential Definition:</label>\n            <select id=\"definitionSelect\" name=\"definition\" class=\"form-control\">\n                <option value=\"definition1\">Definition 1</option>\n                <option value=\"definition2\">Definition 2</option>\n                <option value=\"definition3\">Definition 3</option>\n            </select>\n        </div>\n        <div class=\"row pt-4\">\n            <app-credential-form [attributes]=\"testAttributes\" />\n        </div>\n        \n\n            <button type=\"submit\" class=\"btn btn-primary mt-4\">Submit</button>\n        \n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}